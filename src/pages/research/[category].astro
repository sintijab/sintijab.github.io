---
import { getCollection } from 'astro:content';
import StoryWrapper from '../../layouts/StoryWrapper.astro';
import { RESEARCH_COLLECTION } from '../../consts';

export async function getStaticPaths() {
  const posts = await getCollection(RESEARCH_COLLECTION);
  const categories = posts.map((post) => {
    const cat = post.data.categories.split(',');
    const subcat = post.data.subcategories.split(',');
    return [
      ...cat.filter(item => item !== post.collection),
      ...subcat.filter(item => item !== post.collection),
    ]
  }).flat();
  const uniqueParams = [...new Set(categories)].map(item => {let formatted = item.toLowerCase(); formatted = formatted.trim(); return formatted.replace(/\s+/g, '-')} );

	return uniqueParams.map((category) => {
    return {
		params: { category },
		props: { collection: RESEARCH_COLLECTION },
	}});
}

export interface Props {
  category: string;
  collection: string;
}
const { collection } = Astro.props;
const { category } = Astro.params;
---
<StoryWrapper category={category} collection={collection} />
