---
import { getCollection } from 'astro:content';
import StoryWrapper from '../../layouts/StoryWrapper.astro';
import { WORKSHOP_COLLECTION } from '../../consts';

export async function getStaticPaths() {
  const posts = await getCollection(WORKSHOP_COLLECTION);
  const categories = posts.map((post) => {
    const arr = post.data.categories.split(',');
    return arr.filter(item => item !== post.collection);
  }).flat();
  if (posts.collection) {
    posts.filter(post => post.data.categories.includes(post.collection))
  }
  const uniqueParams = [...new Set(categories)].map(item => {let formatted = item.toLowerCase(); formatted = formatted.trim(); return formatted.replace(/\s+/g, '-')} );
	return uniqueParams.map((category) => {
    return {
		params: { category: category },
		props: { collection: WORKSHOP_COLLECTION },
	}});
}

export interface Props {
  category: string;
  collection: string;
}
const { collection } = Astro.props;
const { category } = Astro.params;

---
<StoryWrapper category={category} collection={collection} />
